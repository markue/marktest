development:

production:

test:
  # Site name. Default is "Gitorious"
  #site_name: Gitorious

  # The session secret key (`apg -m 64` is always useful for this kinda stuff)
  cookie_secret: ssssht

  # The path where git repositories are stored. The actual (bare) repositories resides
  # in repository_base_path/#{project.slug}/#{repository.name}.git/:
  repository_base_path: "/tmp/git-repos"

  # Stuff that's in the html <head>. custom stats javascript code etc
  extra_html_head_data:

  # System message that will appear on all pages if present
  system_message:

  # Port the ./script/gitorious script should use:
  gitorious_client_port: 3000

  # Host the ./script/gitorious script should use:
  gitorious_client_host: localhost

  # Host which is serving the gitorious app, eg "gitorious.org"
  gitorious_host: gitorious.test

  # User which is running git daemon
  gitorious_user: git

  # Email address to the support for the Gitorious server
  gitorious_support_email: support@gitorious.org

  # Email spam on server errors to:
  exception_notification_emails:

  # Mangle visible e-mail addresses (spam protection)
  mangle_email_addresses: true

  # Enable or Disable Public Mode (true) or Private Mode (false)
  public_mode: true

  # Define your locale
  locale: en

  # Where should we store generated tarballs?
  # (should be readable by webserver, since we tell it to send the file using X-Sendfile)
  archive_cache_dir: "/path/to/tarballs-cache"
  # Which directory should we work in when we generate tarballs, before moving
  # them to the above dir?
  archive_work_dir: "/path/to/tarballs-work"

  # is it only site admins who can create new projects?
  only_site_admins_can_create_projects: false

  # Should we hide HTTP clone urls?
  hide_http_clone_urls: false

  # Should we hide Git protocol clone urls?
  hide_git_clone_urls: false

  # Always display SSH URLs, regardless of push access?
  # This can be useful when HTTP and Git isn't available
  always_display_ssh_url: false

  # Use SSL? Requires web server configuration. Recommended for security. Forces the use of
  # HTTPS on login page and all pages while user is logged in
  use_ssl: true

  # Is this gitorious.org? Read: should we have a very flashy homepage?
  is_gitorious_dot_org: true

  # Available project licenses. This can be configured as an array of licenses:
  #
  # licenses:
  #   - BSD
  #   - GPL
  #   - LGPL
  #   - MIT
  #
  # Alternately, you can configure licenses as an array of hashes, where each
  # hash consists of name -> description pairs. The descriptions will be shown
  # in the project creation UI (/projects/new).
  #
  # licenses:
  #   - MIT: No guarantees, no strings attached
  #   - BSD: Keep the copyright
  #
  # For multi-line descriptions, use the YAML escape pipe:
  #
  # licenses:
  #   - MIT: |
  #     <ul>
  #       <li>Liberal license</li>
  #     </ul>
  #   - BSD: Keep the copyright
  #
  # Default licenses are:
  #
  # licenses:
  #   - Academic Free License v3.0",
  #   - MIT License
  #   - BSD License
  #   - Ruby License
  #   - GNU General Public License version 2(GPLv2)
  #   - GNU General Public License version 3 (GPLv3)
  #   - GNU Lesser General Public License (LGPL)
  #   - GNU Affero General Public License (AGPLv3)
  #   - Mozilla Public License 1.0 (MPL)
  #   - Mozilla Public License 1.1 (MPL 1.1)
  #   - Qt Public License (QPL)
  #   - Python License
  #   - zlib/libpng License
  #   - Apache License
  #   - Apple Public Source License
  #   - Perl Artistic License
  #   - Microsoft Permissive License (Ms-PL)
  #   - ISC License
  #   - Lisp Lesser License
  #   - Boost Software License
  #   - Public Domain
  #   - Other Open Source Initiative Approved License
  #   - Other/Proprietary License
  #   - Other/Multiple
  #   - None
  #

  # Pick a default license
  #default_license: GNU Affero General Public License (AGPLv3)

  # Terms of service and privacy policy
  terms_of_use: false
  terms_of_service_url: http://en.gitorious.org/tos
  privacy_policy_url: http://en.gitorious.org/privacy_policy

  # Messaging queue configuration
  # Gitorious ships with two message queue implementations; Stomp via the
  # ActiveMessaging gem and Resque. A TorqueBox implementation is on its way.
  # Possible values: stomp, resque, test, sync. Default value is stomp. The test
  # implementation is intended for unit testing only, not for production or
  # development use (messages are only stored in a list, never processed).  The
  # sync adapter is intended for development use, but may also suit low traffic
  # setups where performance is not critical.
  messaging_adapter: stomp

  ##############################################################################
  # The following settings are useful if you're interested in theming your
  # Gitorious install. Please note however, that we don't give any API
  # guarantees for view code, controllers or CSS. In fact, we plan to ditch most
  # of the existing CSS and JavaScript and replace it with a more modular system
  # (and significantly improved) markup sometime soon-ish, so use
  # "themes"/overrides at your own risk. In particular, we will not include
  # relevant theme information in the Changelog, so you will need to refer to
  # the git log if updating gives you trouble.
  ##############################################################################

  # Additional stylesheets for most pages. "Most pages" is everything except for
  # the frontpage/public index, login page and the register page.
  #
  # One way to theme Gitorious would be to put a submodule in public/ that
  # contains stylesheets and images. Then include the following setting
  # (assuming that your submodule is at public/mytheme, and includes a directory
  # stylesheets/theme.css):
  #common_stylesheets: /mytheme/stylesheets/theme
  #
  # If you have several files:
  #common_stylesheets:
  #  - /mytheme/stylesheets/theme
  #  - /mytheme/stylesheets/theme2
  #
  # Note that the extra stylesheets will be added to the bundle used in
  # production

  # Additional stylesheets for the frontpage and login pages. Works like the
  # common_stylesheets setting
  #external_stylesheets: /mytheme/stylesheets/themed-public-index

  # Use your own favicon
  #favicon_url: http://www.mysite.com/favicon.ico

  # Logo image. If this setting is not provided, the default Gitorious logo will
  # be used. If you provide the setting, but no value, no logo image will be
  # rendered, only the text "Gitorious" (may be useful if you want to provide a
  # logo via CSS). If you provide a URL, it will be assumed to be an image and
  # included as an img tag.
  #logo_url:

  # Add more view paths if you want to override some or all of Gitorious'
  # views. Make sure you know what you're doing before attepting this - there is
  # no API guarantee from the current controllers. If you override views, study
  # the git log (the Changelog may not mention these changes) before upgrading.
  #additional_view_paths: vendor/plugin/mysite/views
  #
  # This allows you to e.g. provide your own frontpage template by saving the
  # file:
  # vendor/plugin/mysite/views/site/public_index.html.erb
  #
  # (Note that this particular template requires is_gitorious_dot_org:
  # true). Refer to app/views/site/public_index.html.erb for how to customize.

  # The SSH fingerprint of your server
  ssh_fingerprint: "7e:af:8d:ec:f0:39:5e:ba:52:16:ce:19:fa:d4:b8:7d"

  # An array of two-element arrays to be rendered along the normal links  in the footer on the site
  # The first element is the link text, the next is the URL
  additional_footer_links:
    - - Professional Gitorious Services
      - http://gitorious.com/

  # Configure which address to use as From when sending email
  sender_email_address: "Gitorious <no-reply@yourdomain.example>"
